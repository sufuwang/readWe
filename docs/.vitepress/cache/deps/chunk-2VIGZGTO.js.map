{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/tdesign-icons-vue-next@0.1.11_vue@3.3.4/node_modules/.pnpm/@babel+runtime@7.16.7/node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../../../../node_modules/.pnpm/tdesign-icons-vue-next@0.1.11_vue@3.3.4/node_modules/tdesign-icons-vue-next/src/utils/render-fn.ts", "../../../../node_modules/.pnpm/tdesign-icons-vue-next@0.1.11_vue@3.3.4/node_modules/tdesign-icons-vue-next/src/utils/config-context.ts", "../../../../node_modules/.pnpm/tdesign-icons-vue-next@0.1.11_vue@3.3.4/node_modules/tdesign-icons-vue-next/src/utils/use-common-classname.ts", "../../../../node_modules/.pnpm/tdesign-icons-vue-next@0.1.11_vue@3.3.4/node_modules/tdesign-icons-vue-next/src/utils/use-size-props.ts", "../../../../node_modules/.pnpm/tdesign-icons-vue-next@0.1.11_vue@3.3.4/node_modules/tdesign-icons-vue-next/esm/style/css.js"],
  "sourcesContent": ["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}", "import { VNode, h } from 'vue';\nimport { SVGJson } from './types';\n\nfunction camel2Kebab(camelString:string) {\n  const covertArr = ['fillOpacity', 'fillRule', 'clipRule'];\n  if (covertArr.includes(camelString)) { return camelString.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase(); }\n  return camelString;\n}\n\nfunction renderFn(node: SVGJson, props:Record<string, any>): VNode {\n  const kebabAttrs = Object.keys(node.attrs).reduce((result, key) => {\n    // eslint-disable-next-line no-param-reassign\n    result[camel2Kebab(key)] = node.attrs[key];\n    return result;\n  }, {});\n  return h(\n    node.tag,\n    {\n      ...kebabAttrs,\n      ...props,\n    },\n    (node.children || []).map((child: SVGJson) => renderFn(child, {})),\n  );\n}\n\nexport default renderFn;\n", "export const DEFAULT_CLASS_PREFIX = 't';\nexport const DEFAULT_LOCALE = 'zh-CN';\n\nexport interface Config {\n  /**\n   * 组件类名前缀\n   *\n   * @default 't'\n   */\n  classPrefix?: string;\n\n  /**\n   * 组件语言版本\n   *\n   * @default 'zh-CN'\n   */\n  locale?: 'zh-CN';\n}\n\nconst ConfigContext = {\n  classPrefix: DEFAULT_CLASS_PREFIX,\n  locale: DEFAULT_LOCALE,\n};\n\nexport default ConfigContext;\n", "import ConfigContext from './config-context';\n\nconst keyList = ['SIZE', 'STATUS'] as const;\n\ntype CommonClassNameRecord<T extends readonly (keyof any)[]> = {\n  [K in T[number]]: Record<string, string>;\n};\n\nexport default function useCommonClassName(): CommonClassNameRecord<typeof keyList> {\n  const { classPrefix } = ConfigContext;\n\n  return {\n    SIZE: {\n      default: '',\n      xs: `${classPrefix}-size-xs`,\n      small: `${classPrefix}-size-s`,\n      medium: `${classPrefix}-size-m`,\n      large: `${classPrefix}-size-l`,\n      xl: `${classPrefix}-size-xl`,\n      block: `${classPrefix}-size-full-width`,\n    },\n    STATUS: {\n      loading: `${classPrefix}-is-loading`,\n      disabled: `${classPrefix}-is-disabled`,\n      focused: `${classPrefix}-is-focused`,\n      success: `${classPrefix}-is-success`,\n      error: `${classPrefix}-is-error`,\n      warning: `${classPrefix}-is-warning`,\n      selected: `${classPrefix}-is-selected`,\n      active: `${classPrefix}-is-active`,\n      checked: `${classPrefix}-is-checked`,\n      current: `${classPrefix}-is-current`,\n      hidden: `${classPrefix}-is-hidden`,\n      visible: `${classPrefix}-is-visible`,\n      expanded: `${classPrefix}-is-expanded`,\n      indeterminate: `${classPrefix}-is-indeterminate`,\n    },\n  };\n}\n", "import { computed, ComputedRef } from 'vue';\nimport useCommonClassName from './use-common-classname';\n\n// eslint-disable-next-line consistent-return\nexport default function useSizeProps(size?: ComputedRef<string | number>) {\n  const COMMON_SIZE_CLASS_NAMES = useCommonClassName().SIZE;\n\n  const className = computed(() => {\n    if (size.value in COMMON_SIZE_CLASS_NAMES) {\n      return COMMON_SIZE_CLASS_NAMES[size.value];\n    }\n    return '';\n  });\n\n  const style = computed(() => {\n    if (size.value === undefined || size.value in COMMON_SIZE_CLASS_NAMES) {\n      return {};\n    }\n    return {\n      fontSize: size.value,\n    };\n  });\n\n  return { style, className };\n}\n", "import \"./index.css\";\n//# sourceMappingURL=css.js.map\n"],
  "mappings": ";;;;;;AAAe,SAAS,gBAAgB,KAAK,KAAK,OAAO;AACvD,MAAI,OAAO,KAAK;AACd,WAAO,eAAe,KAAK,KAAK;MAC9B;MACA,YAAY;MACZ,cAAc;MACd,UAAU;IAChB,CAAK;EACL,OAAS;AACL,QAAI,GAAG,IAAI;EACf;AAEE,SAAO;AACT;;;;;;;;;;;;;;;;;;;;;;;;ACVA,SAAA,YAAqBA,aAAoB;MACjCC,YAAY,CAAC,eAAe,YAAY,UAAA;MAC1CA,UAAUC,SAASF,WAAAA,GAAc;WAASA,YAAYG,QAAQ,gCAAgC,OAAA,EAASC,YAAAA;;SACpGJ;AAAA;AAGT,SAAA,SAAkBK,MAAeC,OAAkC;MAC3DC,aAAaC,OAAOC,KAAKJ,KAAKK,KAAAA,EAAOC,OAAO,CAACC,QAAQC,QAAQ;WAE1DC,YAAYD,GAAAA,CAAAA,IAAQR,KAAKK,MAAMG,GAAAA;WAC/BD;KACN,CAAA,CAAA;SACIG,EACLV,KAAKW,KAAAA,cAAAA,cAAAA,CAAAA,GAEAT,UAAAA,GACAD,KAAAA,IAEJ,KAAKW,YAAY,CAAA,GAAIC,IAAKC,WAAmBC,SAASD,OAAO,CAAA,CAAA,CAAA,CAAA;AAAA;;;ICrBrDE,uBAAuB;IACvBC,iBAAiB;IAkBxBC,gBAAgB;EACpBC,aAAaH;EACbI,QAAQH;AAAA;;;8BCb0E;MAC5E;IAAEI;MAAgBC;SAEjB;IACLC,MAAM;MACJC,SAAS;MACTC,IAAAA,GAAAA,OAAOJ,aAAAA,UAAAA;MACPK,OAAAA,GAAAA,OAAUL,aAAAA,SAAAA;MACVM,QAAAA,GAAAA,OAAWN,aAAAA,SAAAA;MACXO,OAAAA,GAAAA,OAAUP,aAAAA,SAAAA;MACVQ,IAAAA,GAAAA,OAAOR,aAAAA,UAAAA;MACPS,OAAAA,GAAAA,OAAUT,aAAAA,kBAAAA;;IAEZU,QAAQ;MACNC,SAAAA,GAAAA,OAAYX,aAAAA,aAAAA;MACZY,UAAAA,GAAAA,OAAaZ,aAAAA,cAAAA;MACba,SAAAA,GAAAA,OAAYb,aAAAA,aAAAA;MACZc,SAAAA,GAAAA,OAAYd,aAAAA,aAAAA;MACZe,OAAAA,GAAAA,OAAUf,aAAAA,WAAAA;MACVgB,SAAAA,GAAAA,OAAYhB,aAAAA,aAAAA;MACZiB,UAAAA,GAAAA,OAAajB,aAAAA,cAAAA;MACbkB,QAAAA,GAAAA,OAAWlB,aAAAA,YAAAA;MACXmB,SAAAA,GAAAA,OAAYnB,aAAAA,aAAAA;MACZoB,SAAAA,GAAAA,OAAYpB,aAAAA,aAAAA;MACZqB,QAAAA,GAAAA,OAAWrB,aAAAA,YAAAA;MACXsB,SAAAA,GAAAA,OAAYtB,aAAAA,aAAAA;MACZuB,UAAAA,GAAAA,OAAavB,aAAAA,cAAAA;MACbwB,eAAAA,GAAAA,OAAkBxB,aAAAA,mBAAAA;;;AAAA;;;sBC/BayB,MAAqC;MAClEC,0BAA0BC,mBAAAA,EAAqBC;MAE/CC,YAAYC,SAAS,MAAM;QAC3BL,KAAKM,SAASL,yBAAyB;aAClCA,wBAAwBD,KAAKM,KAAAA;;WAE/B;;MAGHC,QAAQF,SAAS,MAAM;QACvBL,KAAKM,UAAU,UAAaN,KAAKM,SAASL,yBAAyB;aAC9D,CAAA;;WAEF;MACLO,UAAUR,KAAKM;;;SAIZ;IAAEC;IAAOH;;AAAA;;;ACvBlB,OAAO;",
  "names": ["camelString", "covertArr", "includes", "replace", "toLowerCase", "node", "props", "kebabAttrs", "Object", "keys", "attrs", "reduce", "result", "key", "camel2Kebab", "h", "tag", "children", "map", "child", "renderFn", "DEFAULT_CLASS_PREFIX", "DEFAULT_LOCALE", "ConfigContext", "classPrefix", "locale", "classPrefix", "ConfigContext", "SIZE", "default", "xs", "small", "medium", "large", "xl", "block", "STATUS", "loading", "disabled", "focused", "success", "error", "warning", "selected", "active", "checked", "current", "hidden", "visible", "expanded", "indeterminate", "size", "COMMON_SIZE_CLASS_NAMES", "useCommonClassName", "SIZE", "className", "computed", "value", "style", "fontSize"]
}
